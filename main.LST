C51 COMPILER V9.50a   MAIN                                                                 12/08/2015 14:46:48 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe main.c DB OE BR INCDIR(c:\SiLabs\MCU\Inc)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // F31x_Blinky.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright (C) 2007 Silicon Laboratories, Inc.
   5          //
   6          // AUTH: JS
   7          // DATE: 03 JUL 02
   8          //
   9          // This program flashes the green LED on the C8051F31x target board about
  10          // five times a second using the interrupt handler for Timer2.
  11          //
  12          // Target: C8051F31x
  13          //
  14          // Tool chain: KEIL Eval 'c'
  15          //
  16          
  17          //-----------------------------------------------------------------------------
  18          // Includes
  19          //-----------------------------------------------------------------------------
  20          #include <c8051f310.h>                    // SFR declarations
  21          #include "stdio.h"
  22          
  23          //-----------------------------------------------------------------------------
  24          // 16-bit SFR Definitions for 'F30x
  25          //-----------------------------------------------------------------------------
  26          
  27          sfr16 TMR2RL   = 0xca;                    // Timer2 reload value
  28          sfr16 TMR2     = 0xcc;                    // Timer2 counter
  29          
  30          //-----------------------------------------------------------------------------
  31          // Global CONSTANTS
  32          //-----------------------------------------------------------------------------
  33          
  34          #define SYSCLK       24500000 / 8         // SYSCLK frequency in Hz
  35          
  36          sbit LED = P3^3;                          // LED='1' means ON
  37          sbit SW2 = P0^7;                          // SW2='0' means switch pressed
  38          
  39          //-----------------------------------------------------------------------------
  40          // Function PROTOTYPES
  41          //-----------------------------------------------------------------------------
  42          void SYSCLK_Init (void);
  43          void PORT_Init (void);
  44          void Timer2_Init (int counts);
  45          void Timer2_ISR (void);
  46          void UART0_Init (void);
  47          
  48          //-----------------------------------------------------------------------------
  49          // MAIN Routine
  50          //-----------------------------------------------------------------------------
  51          void main (void) {
  52   1      
  53   1         // disable watchdog timer
  54   1         PCA0MD &= ~0x40;                       // WDTE = 0 (clear watchdog timer
  55   1                                                // enable)
C51 COMPILER V9.50a   MAIN                                                                 12/08/2015 14:46:48 PAGE 2   

  56   1      
  57   1         SYSCLK_Init ();                        // Initialize system clock to
  58   1                                                // 24.5MHz
  59   1         PORT_Init ();                          // Initialize crossbar and GPIO
  60   1         Timer2_Init (0xFFF0);                  // Init Timer2
  61   1         UART0_Init();
  62   1      
  63   1         EA = 1;                                // enable global interrupts
  64   1      
  65   1         while (1) {                            // spin forever
  66   2            printf("Hey");
  67   2         }
  68   1      }
  69          
  70          //-----------------------------------------------------------------------------
  71          // SYSCLK_Init
  72          //-----------------------------------------------------------------------------
  73          //
  74          // This routine initializes the system clock to use the internal 24.5MHz / 8
  75          // oscillator as its clock source.  Also enables missing clock detector reset.
  76          //
  77          void SYSCLK_Init (void)
  78          {
  79   1         OSCICN = 0xc3;                         // configure internal oscillator for
  80   1                                                // its lowest frequency
  81   1         RSTSRC = 0x04;                         // enable missing clock detector
  82   1      }
  83          
  84          //-----------------------------------------------------------------------------
  85          // PORT_Init
  86          //-----------------------------------------------------------------------------
  87          //
  88          // Configure the Crossbar and GPIO ports.
  89          // P3.3 - LED (push-pull)
  90          //
  91          void PORT_Init (void)
  92          {
  93   1                                                // assignments
  94   1         XBR0     = 0x01;                       // no digital peripherals selected
  95   1         XBR1     = 0x40;                       // Enable crossbar and weak pull-ups
  96   1         P0MDOUT |= 0x10;                       // TxD (P0.4) as push-pull
  97   1         P3MDOUT |= 0x08;                       // enable LED as a push-pull output
  98   1      }
  99          
 100          //-----------------------------------------------------------------------------
 101          // Timer2_Init
 102          //-----------------------------------------------------------------------------
 103          //
 104          // Configure Timer2 to 16-bit auto-reload and generate an interrupt at
 105          // interval specified by <counts> using SYSCLK/48 as its time base.
 106          //
 107          void Timer2_Init (int n)
 108          {
 109   1                                                // use SYSCLK/12 as timebase
 110   1         CKCON  &= ~0x10;                       // Timer2 clocked based on T2XCLK;
 111   1      
 112   1         TMR2CN  = 0x04;                        // Stop Timer2; Clear TF2; Voir datasheet p199
 113   1         TMR2RL  = -n;                          // Init reload values
 114   1      
 115   1         ET2 = 1;
 116   1      
 117   1      }
C51 COMPILER V9.50a   MAIN                                                                 12/08/2015 14:46:48 PAGE 3   

 118          
 119          
 120          //-----------------------------------------------------------------------------
 121          // UART0_Init
 122          //-----------------------------------------------------------------------------
 123          //
 124          
 125          
 126          void UART0_Init()
 127          {
 128   1         //Timer 1 init
 129   1         TH1     = 0x96;                        // débordement à 57600Hz
 130   1              
 131   1         TMOD   |= 0x20;                        // mode2 autoreload
 132   1         CKCON  &= 0xF4;                        // sysclk pour timer1
 133   1         TR1     = 1;                           // timer1 run
 134   1      
 135   1      
 136   1         //UART Init
 137   1         REN0    = 1;                           // reception autorisée
 138   1         SBUF0   = '\n';                        // pour commencer nouvelle  
 139   1      }
 140          
 141          //-----------------------------------------------------------------------------
 142          // Put_char_
 143          //-----------------------------------------------------------------------------
 144          //
 145          
 146          void Put_char_(unsigned char c)
 147          {
 148   1         while (TI0 == 0) {}
 149   1         TI0     = 0;
 150   1         SBUF0   = c;
 151   1      }
 152          
 153          //-----------------------------------------------------------------------------
 154          // Interrupt Service Routines
 155          //-----------------------------------------------------------------------------
 156          
 157          //-----------------------------------------------------------------------------
 158          // Timer2_ISR
 159          //-----------------------------------------------------------------------------
 160          // This routine changes the state of the LED whenever Timer2 overflows.
 161          //
 162          void Timer2_ISR (void) interrupt 5
 163          {
 164   1         if (~SW2) {
 165   2            LED = 1;
 166   2         }
 167   1         else {
 168   2            LED = ~LED;
 169   2         }
 170   1      
 171   1         TF2H = 0;                              // clear Timer2 interrupt flag
 172   1      }
 173          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    114    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.50a   MAIN                                                                 12/08/2015 14:46:48 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
